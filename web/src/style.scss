* {
    box-sizing: border-box;
    outline: none
};

html {
    font-size: 13px
};

body {
    margin: 0 ;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-font-smoothing: antialiased;    //字体平滑
};

a {
    color: #999
};

$colors: (
    //当左边定义的名字跟右边颜色名字相同时，名字应该加上双引号
    //为了统一这里都加上双引号
    "primary": #db9e3f,
    "white": #fff,
    "light": #f9f9f9,
    "grey": #999,
    "grey-1": #666,
    "dark-1": #343440,
    "dark": #222,
    "black": #000,
);

@each $colorkey, $color in $colors {
    .text-#{$colorkey} {
        color: $color
    }
    .bg-#{$colorkey} {
        background-color: $color;
    }
}

//text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
};

$base-font-size: 1rem;
$font-sizes: (
    xxs: 0.6154, //8px
    xs: 0.7692, //10px
    sm: 0.9231, //12px
    md: 1,  //13px
    lg: 1.0769,  //14px
    xl: 1.2308,  //16px
);

@each $sizekey, $size in $font-sizes {
    .fs-#{$sizekey} {
        font-size: $size * $base-font-size;
    }
}

.d-flex {
    display: flex;
};
.flex-column {
    flex-direction: column;
};
//当是flex布局的时候，jc表示水平布局；当是column布局，则是垂直方向
$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: sapce-between,
    around: space-around,
);
@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
};
//当是flex布局的时候，ai表示竖直布局；当是column布局，则是水平方向
$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch,
);
@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}
//自动拉伸
.flex-grow-1 {
    flex-grow: 1;
}
.fl-1{
    float: left
}

//width
.w-100 {
    width: 100%
}



//spacing
//0-5: 0
//.mt-1 => margin top  
$spacing-types: (m: margin, p: padding);
$spacing-directions: (t: top, r: right, b: bottom, l: left);
$spacing-base-sizes: 1rem;
$spacing-sizes: (
    0: 0, 
    1: 0.25, 
    2: 0.5, 
    3: 1, 
    4: 1.5, 
    5: 3
);

@each $typekey,$type in $spacing-types {
    //.m-1
    @each $sizekey,$size in $spacing-sizes {
        .#{$typekey}-#{$sizekey} {
            #{$type}: $size * $spacing-base-sizes
        }
    }
    //mx-1  my-1
    @each $sizekey,$size in $spacing-sizes {
        .#{$typekey}x-#{$sizekey} {
            #{$type}-left: $size * $spacing-base-sizes;
            #{$type}-right: $size * $spacing-base-sizes;
        };
        .#{$typekey}y-#{$sizekey} {
            #{$type}-top: $size * $spacing-base-sizes;
            #{$type}-bottom: $size * $spacing-base-sizes;
        }
    }
    //.mt-1
    @each $directionkey,$direction in $spacing-directions {
        @each $sizekey,$size in $spacing-sizes {
            .#{$typekey}#{$directionkey}-#{$sizekey} {
                #{$type}-#{$direction}: $size * $spacing-base-sizes
            }
        }
    }
};

//button
.btn {
    border: none;
    border-radius:0.1538rem;
    font-size: map-get($font-sizes , 'sm' ) * $base-font-size;
    padding: 0.2rem 0.6rem;
}

//nav
.nav {
    .nav-item {
        border-bottom: 3px solid transparent  ;
        padding-bottom: 0.2rem;
        //&表示上层本身
        &.active {
            border-bottom: 3px solid #fff  ;
        }
    }
}